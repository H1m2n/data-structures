Recursion is every where used in several data structeres like array, string, tree, graph
moreover algorithms are design on recursion eg: DP, Backtracking, Divide and Concquer

Recursion can be solved by using 3 methods
1. IBH (Induction, Base Condition, Hypothesis). Generally used for simple problem. eg - print 1 to N
   a> Base cond - where recursion should be break (that is obviously smallest valid input)
   b> Hypothesis - We will try to run recursive fucntion on smaller input, there we can see some generalise formula (basically we will get the signature of function)
   c> Induction - Introduce  a step output


   Approach for IBH is
   a> design Hypothesis
   b> induction
   c> base cond

2. Recursion tree (I/p - o/p method) - https://www.youtube.com/watch?v=kHi1DUhp9kM&list=PL_z_8CaSLPWeT1ffjiImo0sYTcnLzo-wY&index=2
3. Decision tree


IMPORTANT:
Example path - dynamic_programming/leetcode/sort-integers-by-the-power-value.py

# hypothesis and base condition work together, can be easily explained by comment in base condition
# to get the intermediate result, we need to store that result somewhere like  dp[n] = 1 + self.helper(n, dp)
# It is important to return a value from the function, if we expect intermediate results to store
